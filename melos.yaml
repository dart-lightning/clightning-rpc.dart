name: lndart_cln

ide:
  intellij: true

packages:
  - packages/**

scripts:
  analyze:
    run: melos exec -c 1 -- "dart format --set-exit-if-changed . && dart analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.
    select-package:

  rpc_analyze:
    run: melos exec -c 1 --scope="rpc" -- "dart format --set-exit-if-changed . && dart analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.

  plugin_analyze:
    run: melos exec -c 1 --scope="cln_plugin" -- "dart format --set-exit-if-changed . && dart analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.

  common_analyze:
    run: melos exec -c 1 --scope="cln_common" -- "dart format --set-exit-if-changed . && dart analyze . --fatal-infos"
    description: Run dart analyzer in a specific package.

  plugin_test:
    description: Run tests in a specific package.
    run: melos exec --concurrency=2 --scope="cln_plugin" -- "dart pub get && dart pub run test"
    env:
      MELOS_TEST: true

  common_test:
    description: Run tests in a specific package.
    run: melos exec --concurrency=2 --scope="cln_common" -- "dart pub get && dart pub run test"
    env:
      MELOS_TEST: true

  rpc_test:
    description: Run tests in a specific package.
    run: melos exec --concurrency=2 --scope="rpc" -- "dart pub get && dart pub run test"
    env:
      MELOS_TEST: true

  build_plugin:
    description: Build the plugin used inside the tests.
    run: melos exec --concurrency=2 --scope="cln_plugin" -- "make examples"
    env:
      MELOS_TEST: true


  format: dart format -o write .